[tool.poetry]
name = "pykasten"
version = "0.1.0"
description = "python stuff i use more than once"
authors = ["mb <ichbinmarkus@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "pykasten", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
click = "^8.1.7"
pyside6 = "^6.7.2"
pyqtgraph = "^0.13.7"
qtconsole = {version = "^5.6.0", optional = true }

[tool.poetry.group.dev.dependencies]
flake8 = "^7.1.1"
black = "^24.8.0"
poethepoet = "^0.28.0"
tox = "4.18.1"
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
flake8-docstrings = "^1.7.0"

[tool.poetry.extras]
rich_console = ["qtconsole"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
pykasten = "pykasten._cli:run"

[tool.pytest.ini_options]
addopts = "-v --capture=sys --cov=pykasten --cov-report term-missing"
testpaths = ["test",]
markers = [
    "smoke: marks tests as part of smoke-testing",
    "repeat: used to repeat the last commandline call with pytest."
]

[tool.coverage.run]
omit = [
    "__main__.py",
    "*/examples/*.py"
    ]


[tool.poe.tasks]
test = "pytest -s"
smoke = "pytest -s -m smoke"
_lint = "black src"
_stylecheck = "flake8 --max-line-length=88 --ignore=D107 src/pykasten"
prune = ["_lint", "_stylecheck"]
validate = "tox"

[tool.tox]
legacy_tox_ini = """
[tox]

env_list = 
    lint,
    py311

[testenv:lint]
deps = 
    black
    flake8
    flake8-docstrings
skip_install = true
commands = 
    black src
    flake8 --max-line-length=88 --ignore=D107 src/pykasten

[testenv]
deps =
    pytest
    pytest-cov
    pytest-xvfb

commands = 
    pytest test/ -s --import-mode importlib --capture=sys --cov=pykasten --cov-report term-missing --cov-fail-under=100
"""